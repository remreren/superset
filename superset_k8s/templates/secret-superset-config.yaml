---
# Source: superset/templates/secret-superset-config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: superset-config
  namespace: default
  labels:
    app: superset
    chart: superset-0.12.5
    release: "superset"
    heritage: "Helm"
type: Opaque
stringData:
  superset_config.py: |
    import os

    # Superset specific config
    ROW_LIMIT = 5000

    SQLALCHEMY_DATABASE_URI = os.environ["SUPERSET_SQLALCHEMY_DATABASE_URI"]
    if SQLALCHEMY_DATABASE_URI is None or SQLALCHEMY_DATABASE_URI == "":
        DIALECT = os.environ["DATABASE_DIALECT"]
        if DIALECT == "postgresql":
            DIALECT = "postgresql+psycopg2"
        
        SQLALCHEMY_DATABASE_URI = f"{DIALECT}://{os.environ['DATABASE_USER']}:{os.environ['DATABASE_PASSWORD']}@{os.environ['DATABASE_HOST']}:{os.environ['DATABASE_PORT']}/{os.environ['DATABASE_DB']}"

    # Enable cors
    ENABLE_CORS = True

    # Enable to embed the dashboards in an iframe
    # TODO: Security risk, will be turned off or turned into SAMEORIGIN in the production
    HTTP_HEADERS = {"X-Frame-Options": "ALLOWALL"}

    # Flask-WTF flag for CSRF
    WTF_CSRF_ENABLED = True
    # Add endpoints that need to be exempt from CSRF protection
    WTF_CSRF_EXEMPT_LIST = []
    # A CSRF token that expires in 1 year
    WTF_CSRF_TIME_LIMIT = 60 * 60 * 24 * 365

    # Embedded config options
    GUEST_ROLE_NAME = "Gamma"
    GUEST_TOKEN_JWT_SECRET = os.environ["SUPERSET_GUEST_TOKEN_JWT_SECRET"]
    GUEST_TOKEN_JWT_ALGO = "HS256"
    GUEST_TOKEN_HEADER_NAME = "X-GuestToken"
    GUEST_TOKEN_JWT_EXP_SECONDS = 300  # 5 minutes
    GUEST_TOKEN_JWT_AUDIENCE = os.environ["SUPERSET_GUEST_TOKEN_JWT_AUDIENCE"]

  superset_init.sh: |
    #!/bin/sh
    set -eu
    echo "Upgrading DB schema..."
    superset db upgrade
    echo "Initializing roles..."
    superset init
    
    echo "Creating admin user..."
    superset fab create-admin \
                    --username admin \
                    --firstname Superset \
                    --lastname Admin \
                    --email admin@superset.com \
                    --password admin \
                    || true
    
    if [ -f "/app/configs/import_datasources.yaml" ]; then
      echo "Importing database connections.... "
      superset import_datasources -p /app/configs/import_datasources.yaml
    fi
  superset_bootstrap.sh: |
    #!/bin/bash
    if [ ! -f ~/bootstrap ]; then echo "Running Superset with uid 0" > ~/bootstrap; fi
